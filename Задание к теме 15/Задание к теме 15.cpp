#include <iostream>
#define _USE_MATH_DEFINES
#include <math.h>
#include <cmath>
#include <time.h>
#include <ctime>
using namespace std;

double	PowerA3(double A)
{
	return pow(A, 3);
}

int Sign(double X)
{
	if (X < 0) return -1;
	if (X == 0) return 0;
	if (X > 0) return 1;
}

int RingS(double R1, double R2)
{
	return M_PI * (pow(R1,2) - pow(R2,2));
}

int Quarter(int x, int y)
{
	if ((x > 0) && (y > 0))  return 1;
	if ((x < 0) && (y > 0))  return 2;
	if ((x < 0) && (y < 0))  return 3;     
	if ((x > 0) && (y < 0))  return 4;
}

float fact2(int n) 
{
	int temp = 1;
	for (; n > 0; n -= 2) temp *= n;
	return temp;
}

int main()
{
	setlocale(LC_ALL, "");

	// 1. Описать функцию PowerA3(A, B), вычисляющую третью степень числа A и возвращающую ее в переменной B 
	//(A — входной, B — выходной параметр; оба параметра являются вещественными). С помощью этой функции найти третьи степени пяти данных чисел.
	cout << "1. ";
	double B;
	B = 2;
	B = PowerA3(B);
	cout << B;
	cout << endl;

	// 2. Описать функцию Sign(X) целого типа, возвращающую для вещественного числа X следующие значения:
	// −1, если X < 0; 0, если X = 0; 1, если X > 0.
	// С помощью этой функции найти значение выражения Sign(A) + Sign(B) для данных вещественных чисел A и B.
	cout << "2. ";
	double A, sum;
	A = -1; B = -1;
	sum = Sign(A) + Sign(B);
	cout << sum;
	cout << endl;

	// 3. Описать функцию RingS(R1, R2) вещественного типа, находящую площадь кольца,
	// заключенного между двумя окружностями с общим центром и радиусами R1 и R2 (R1 и R2 — вещественные, R1 > R2). 
	// С ее помощью найти площади трех колец, для которых даны внешние и внутренние радиусы.
	cout << "3. ";
	double R1, R2;
	R1 = 5; R2 = 3;
	cout << "Площадь кольца равна: " << RingS(R1, R2) << endl;
	R1 = 2; R2 = 1;
	cout << "Площадь кольца равна: " << RingS(R1, R2) << endl;
	R1 = 10; R2 = 9;
	cout << "Площадь кольца равна: " << RingS(R1, R2) << endl;
	
	// 4. Описать функцию Quarter(x, y) целого типа, определяющую номер координатной четверти, в которой находится точка с ненулевыми вещественными координатами (x, y).
	// С помощью этой функции найти номера координатных четвертей для трех точек с данными ненулевыми координатами
	cout << "4. ";
	int x, y;
	x = 1; y = 1;
	cout << "Точка ледит в " << Quarter(x, y) << " четверти" << endl;
	x = - 1; y = 1;
	cout << "Точка ледит в " << Quarter(x, y) << " четверти" << endl;
	x = 1; y = -1;
	cout << "Точка ледит в " << Quarter(x, y) << " четверти" << endl;
	x = -1; y = -1;
	cout << "Точка ледит в " << Quarter(x, y) << " четверти" << endl;

	// 5. Описать функцию Fact2(N) вещественного типа, вычисляющую двойной факториал: 
	// N!!= 1·3·5·. ..·N, если N — нечетное;
	// N!!= 2·4·6·. ..·N, если N — четное(N > 0 — параметр целого типа; вещественное возвращаемое значение используется для того, чтобы избежать целочисленного переполнения при больших значениях N).
		
	int i, n;
	for (i = 1; i <= 5; ++i) {
		cout << "N = ";
		n = 3;
		cout << fact2(n);
	}
}